// Generated by CoffeeScript 1.7.1
(function() {
  var Bounds, Events;

  Events = Matter.Events;

  Bounds = Matter.Bounds;

  window.setupCamera = function(engine, initialZoom) {
    var adjusted, boundsScale, boundsScaleTarget, viewPortCenter;
    viewPortCenter = {
      x: engine.render.options.width * 0.5,
      y: engine.render.options.height * 0.5
    };
    boundsScaleTarget = 1;
    boundsScale = {
      x: 1,
      y: 1
    };
    adjusted = initialZoom;
    window.zoom = function(amount) {
      return adjusted = amount;
    };
    engine.world.bounds.min.x = viewPortCenter.x - engine.render.options.width;
    engine.world.bounds.min.y = viewPortCenter.y - engine.render.options.height;
    engine.world.bounds.max.x = viewPortCenter.x + engine.render.options.width;
    engine.world.bounds.max.y = viewPortCenter.y + engine.render.options.height;
    return Events.on(engine, 'beforeTick', function() {
      var scaleFactor, translate;
      scaleFactor = adjusted;
      adjusted = 0;
      if (scaleFactor !== 0) {
        boundsScaleTarget += scaleFactor;
      }
      if (Math.abs(boundsScale.x - boundsScaleTarget) > 0.01) {
        scaleFactor = (boundsScaleTarget - boundsScale.x) * 0.2;
        boundsScale.x += scaleFactor;
        boundsScale.y += scaleFactor;
        engine.render.bounds.max.x = engine.render.bounds.min.x + engine.render.options.width * boundsScale.x;
        engine.render.bounds.max.y = engine.render.bounds.min.y + engine.render.options.height * boundsScale.y;
        engine.world.bounds.min.x = viewPortCenter.x - engine.render.options.width * boundsScale.x;
        engine.world.bounds.min.y = viewPortCenter.y - engine.render.options.height * boundsScale.y;
        engine.world.bounds.max.x = viewPortCenter.x + engine.render.options.width * boundsScale.x;
        engine.world.bounds.max.y = viewPortCenter.y + engine.render.options.height * boundsScale.y;
        translate = {
          x: -viewPortCenter.x * scaleFactor,
          y: -viewPortCenter.y * scaleFactor
        };
        return Bounds.translate(engine.render.bounds, translate);
      }
    });
  };

}).call(this);
