// Generated by CoffeeScript 1.7.1
(function() {
  var renderSpriteSheet, _getTexture;

  window.spriteSheetRenderer = function(engine) {
    var oldBodiesRenderer;
    oldBodiesRenderer = engine.render.controller.bodies;
    return engine.render.controller.bodies = function(engine, bodies, context) {
      var regularBodies, render, spriteSheetBodies;
      render = engine.render;
      spriteSheetBodies = bodies.filter(function(body) {
        return body.render.spriteSheet != null;
      });
      regularBodies = bodies.filter(function(body) {
        return body.render.spriteSheet == null;
      });
      if (spriteSheetBodies.length > 0) {
        renderSpriteSheet(engine.render, spriteSheetBodies, context);
      }
      return oldBodiesRenderer(engine, regularBodies, context);
    };
  };

  _getTexture = function(render, imagePath) {
    var image;
    image = render.textures[imagePath];
    if (image != null) {
      return image;
    }
    image = render.textures[imagePath] = new Image();
    image.ready = false;
    image.src = imagePath;
    image.onload = function() {
      return image.ready = true;
    };
    return image;
  };

  renderSpriteSheet = function(render, bodies, context) {
    var body, spriteSheet, texture, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = bodies.length; _i < _len; _i++) {
      body = bodies[_i];
      spriteSheet = _getTexture(render, body.render.spriteSheet);
      texture = body.render.texture;
      if (!spriteSheet.ready) {
        continue;
      }
      context.save();
      if (body.render.tile.osilates != null) {
        body.render.tile.osilation += 0.01;
        context.translate(body.position.x + Math.cos(body.render.tile.osilation) * body.render.tile.osilationAmount, body.position.y + Math.sin(body.render.tile.osilation) * body.render.tile.osilationAmount);
      } else {
        context.translate(body.position.x, body.position.y);
      }
      context.rotate(body.render.tile.rotation);
      context.drawImage(spriteSheet, texture.x, texture.y, texture.width, texture.height, texture.width / -2, texture.height / -2, texture.width, texture.height);
      _results.push(context.restore());
    }
    return _results;
  };

}).call(this);
